plugins {
    id 'com.github.johnrengelman.shadow'
}

loom {
    forge {
        mixinConfig "botania_overpowered.mixins.json"
        mixinConfig "botania_overpowered.mixins.mekanism.json"
    }
}

architectury {
    platformSetupLoomIde()
    forge()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

repositories {
    maven { url "https://cursemaven.com" }
}

var mek_cf_ids = [
        '1.20.1': 6552911,
        '1.19.2': 4644795,
]

dependencies {
    forge "net.minecraftforge:forge:$rootProject.forge_version"

    modImplementation "curse.maven:mekanism-268560:${mek_cf_ids[minecraft_version]}"

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionForge')
}

var fml_version = forge_version.split('-')[1]
fml_version = fml_version.substring(0, fml_version.indexOf("."))
processResources {
    inputs.property 'version', project.version

    filesMatching('META-INF/mods.toml') {
        expand version: project.version, minecraft_version: minecraft_version, fml_version: fml_version
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    input.set shadowJar.archiveFile
}
